AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  An endpoint for a Slack command that chooses a random member from a Slack
  channel to make coffee

Globals:
  Function:
    Timeout: 5

Parameters:

  SlackTokenParameter:
    Type: String
    Default: <YOUR_SLACK_TOKEN>

  SlackChannelParameter:
    Type: String
    Default: <YOUR_SLACK_CHANNEL>

Resources:

  CoffeeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: CoffeeFunctionRolePolicy1
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - dynamodb:Scan
            - dynamodb:UpdateItem
            Resource: arn:aws:dynamodb:*:*:table/members
            Effect: Allow
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com

  CoffeeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: go1.x
      CodeUri: handlers/coffee
      Handler: main
      Role: !GetAtt CoffeeFunctionRole.Arn
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /
            Method: ANY
      Environment:
        Variables:
          SLACK_TOKEN:
            Ref: SlackTokenParameter
          SLACK_CHANNEL:
            Ref: SlackChannelParameter

  MembersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'members'
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      AttributeDefinitions:
      -
        AttributeName: 'id'
        AttributeType: 'S'
      KeySchema:
      -
        AttributeName: 'id'
        KeyType: 'HASH'
